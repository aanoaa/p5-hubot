#!/usr/bin/env perl
use Hubot::Robot;
use Cwd 'cwd';
use File::Slurp qw/read_file/;
use JSON::XS;
use Getopt::Long::Descriptive;

my ($opt, $usage) = describe_options(
    "hubot %o <arg>",
    [ 'adapter|a=s', 'The Adapter to use', { default => 'shell' } ],
    [ 'name|n=s',    'The name of the robot in chat', { default => 'hubot' } ],
    [ 'help',        'Display the help information' ],
);

print($usage->text), exit if $opt->help;

my $robot = Hubot::Robot->new({
    adapter => $opt->{adapter},
    name    => $opt->{name},
});

$robot->alias($opt->{alias}) if $opt->{alias};

$robot->adapter->on(
    'connected',
    sub {
        my $cwd = cwd();
        my $scriptsFile = "$cwd/hubot-scripts.json";
        if (-f $scriptsFile) {
            my $json = read_file($scriptsFile);
            my $scripts = decode_json($json);
            $robot->loadHubotScripts($scripts);
        }
    }
);

$robot->run;

=pod

=head1 SYNOPSIS

    $ hubot --help
    $ echo '{"help"}' > ./hubot-scripts.json    # `hubot-scripts.json` is required.
    $ hubot
    hubot> hubot help
    # hubot: help <command>
    hubot> exit

    # irc?
    $ HUBOT_IRC_ROOMS='#myroom' \
      HUBOT_IRC_SERVER='irc.myserver.com' \
      HUBOT_IRC_PORT=6667 \
      hubot -a irc
    $ perldoc Hubot::Adapter::Irc    # for more irc env info

=head1 DESCRIPTION

C<hubot> is a Command Line Interface for L<Hubot>.

=head1 SEE ALSO

=over

=item L<Hubot>

=item L<Hubot::Adapter::Irc>

=back

=cut
